// Loop performance test program
// Tests various loop constructs and their performance characteristics

fn test_while_loops() {
    let mut i = 0;
    while i < 1000 {
        let mut j = 0;
        while j < 100 {
            j = j + 1;
        }
        i = i + 1;
    }
}

fn test_for_loops() {
    for i in 0..1000 {
        for j in 0..100 {
            let temp = i + j;
        }
    }
}

fn test_infinite_loops() {
    let mut counter = 0;
    loop {
        counter = counter + 1;
        if counter >= 10000 {
            break;
        }
        
        if counter % 2 == 0 {
            continue;
        }
    }
}

fn test_nested_control_flow() {
    for i in 0..100 {
        if i % 2 == 0 {
            let mut j = 0;
            while j < 50 {
                if j % 3 == 0 {
                    j = j + 1;
                    continue;
                }
                j = j + 1;
            }
        } else {
            loop {
                let mut k = i;
                k = k * 2;
                if k > 1000 {
                    break;
                }
            }
        }
    }
}

fn main() {
    println!("Starting loop performance tests...");
    
    test_while_loops();
    println!("While loop test completed");
    
    test_for_loops();
    println!("For loop test completed");
    
    test_infinite_loops();
    println!("Infinite loop test completed");
    
    test_nested_control_flow();
    println!("Nested control flow test completed");
    
    println!("All loop performance tests completed");
}